volumes:
  grafana_data: {}
  loki_data: {}

services:
  kong:
    image: armeldemarsac/kong-oidc:4.0.0
    container_name: kong
    environment:
      KONG_DATABASE: off
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_DECLARATIVE_CONFIG: /opt/kong/kong.yml
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - api_gateway
    volumes:
      - ./kong/kong.yml:/opt/kong/kong.yml
    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./logging/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - ./logging/grafana/grafana.ini:/etc/grafana/grafana.ini # Mount the updated grafana.ini
      - grafana_data:/var/lib/grafana
    networks:
      - api_gateway
    depends_on:
      - loki
  
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./logging/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - api_gateway
    user: "10001:10001"

  grafana-agent:
    image: grafana/agent:latest
    container_name: grafana_agent
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logging/grafana/agent.yaml:/etc/agent/agent.yaml
    command:
      - "--config.file=/etc/agent/agent.yaml"
      - "--enable-features=integrations-next"
    networks:
      - api_gateway
    depends_on:
      - grafana
      - loki

networks:
  api_gateway:
    driver: bridge
