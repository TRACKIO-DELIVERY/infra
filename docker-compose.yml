services:
  keycloak-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${KEYCLOAK_DB_USER}
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - POSTGRES_DB=${KEYCLOAK_DB}
    ports:
      - "5431:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KEYCLOAK_DB_USER}", "-d", "${KEYCLOAK_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:  
      - keycloak_db_network

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.1 
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_HTTP_ENABLED: 'true'
      KC_HOSTNAME: localhost
      KC_PROXY: 'edge'
      
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/data:/opt/keycloak/data/import
    command: ["start-dev","--import-realm", "--http-relative-path=/auth"]
    depends_on:
      - keycloak-db
    networks:
      - keycloak_db_network
      - api_gateway

  kong:
    image: armeldemarsac/kong-oidc:4.0.0
    container_name: kong
    env_file:
      - .env
    environment:
      KONG_DATABASE: off
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_DECLARATIVE_CONFIG: /opt/kong/kong.yml
      KONG_PLUGINS: bundled,oidc
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    networks:
      - api_gateway
    volumes:
      - ./kong/kong.yml:/opt/kong/kong.yml
    

volumes:
  keycloak_data:
    driver: local

networks:
  api_gateway:
    driver: bridge
